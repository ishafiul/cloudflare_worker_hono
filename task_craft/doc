{
    "info": {
        "title": "Todo API",
        "version": "v1"
    },
    "openapi": "3.1.0",
    "components": {
        "securitySchemes": {
            "AUTH": {
                "type": "http",
                "name": "Authorization",
                "scheme": "bearer",
                "in": "header",
                "description": "Bearer token"
            }
        },
        "schemas": {
            "CreateDeviceUuidDto": {
                "type": "object",
                "properties": {
                    "deviceType": {
                        "type": "string"
                    },
                    "osName": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "deviceModel": {
                        "type": "string"
                    },
                    "isPhysicalDevice": {
                        "type": "boolean"
                    },
                    "appVersion": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "fcmToken": {
                        "type": "string"
                    }
                },
                "required": [
                    "fcmToken"
                ]
            },
            "RequestOtpDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "deviceUuid": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "deviceUuid"
                ]
            },
            "VerifyOtpDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "deviceUuid": {
                        "type": "string"
                    },
                    "otp": {
                        "type": "number"
                    }
                },
                "required": [
                    "email",
                    "deviceUuid",
                    "otp"
                ]
            },
            "RefreshTokenDto": {
                "type": "object",
                "properties": {
                    "deviceUuid": {
                        "type": "string"
                    }
                },
                "required": [
                    "deviceUuid"
                ]
            },
            "Todo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "completedAt": {
                        "type": "string"
                    },
                    "taskDate": {
                        "type": "string",
                        "default": "2024-09-10T00:00:00.000Z"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "in-progress"
                        ]
                    },
                    "setAlarmBeforeMin": {
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "userId",
                    "title",
                    "startTime",
                    "endTime"
                ]
            },
            "CreateTodoDto": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "completedAt": {
                        "type": "string"
                    },
                    "taskDate": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "in-progress"
                        ]
                    },
                    "setAlarmBeforeMin": {
                        "type": "number"
                    }
                },
                "required": [
                    "title",
                    "startTime",
                    "endTime",
                    "taskDate"
                ]
            },
            "Todos": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "number"
                    },
                    "perPageCount": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Todo"
                        }
                    }
                },
                "required": [
                    "pageNumber",
                    "perPageCount",
                    "data"
                ]
            }
        },
        "parameters": {}
    },
    "paths": {
        "/auth/createDeviceUuid": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Create device UUID",
                "requestBody": {
                    "description": "Device UUID creation request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDeviceUuidDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Respond with device UUID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deviceUuid": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "deviceUuid"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reqOtp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestOtpDto"
                            },
                            "example": {
                                "email": "shafiulislam20@gmail.com",
                                "deviceUuid": "e3716131-6aaa-4c5d-b468-71eb9a410b5c"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/verifyOtp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyOtpDto"
                            },
                            "example": {
                                "email": "shafiulislam20@gmail.com",
                                "deviceUuid": "e3716131-6aaa-4c5d-b468-71eb9a410b5c",
                                "otp": 12345
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access Token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "accessToken"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "delete": {
                "security": [
                    {
                        "AUTH": []
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refreshToken": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "accessToken"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/todo": {
            "post": {
                "tags": [
                    "Todo"
                ],
                "security": [
                    {
                        "AUTH": []
                    }
                ],
                "description": "Create a new todo item",
                "requestBody": {
                    "description": "The data required to create a todo item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTodoDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Respond with the created todo item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Respond with an error message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Todo"
                ],
                "security": [
                    {
                        "AUTH": []
                    }
                ],
                "description": "Get a list of todos with pagination and date filtering",
                "parameters": [
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        },
                        "required": false,
                        "description": "The page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 20
                        },
                        "required": false,
                        "description": "Number of items per page",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "description": "Filter todos by task date (in YYYY-MM-DD format)",
                        "name": "taskDate",
                        "in": "query",
                        "example": "1970-01-01"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Respond with the list of todos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todos"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No todos found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/todo/{todoId}": {
            "put": {
                "tags": [
                    "Todo"
                ],
                "security": [
                    {
                        "AUTH": []
                    }
                ],
                "description": "Update an existing todo item",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 3
                        },
                        "required": true,
                        "name": "todoId",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "description": "The data required to update a todo item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTodoDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Respond with the updated todo item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Todo item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Todo"
                ],
                "security": [
                    {
                        "AUTH": []
                    }
                ],
                "description": "Get a specific todo item by ID",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 3
                        },
                        "required": true,
                        "name": "todoId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Respond with the requested todo item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Todo item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Todo"
                ],
                "security": [
                    {
                        "AUTH": []
                    }
                ],
                "description": "Delete a specific todo item by ID",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "name": "todoId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Respond with a success message after deleting the todo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Todo item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/todo/analysis/month-todo-count": {
            "get": {
                "tags": [
                    "Todo Analysis"
                ],
                "security": [
                    {
                        "AUTH": []
                    }
                ],
                "description": "Get a count of todos for each date in a given month and year",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 4
                        },
                        "required": true,
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 2
                        },
                        "required": true,
                        "name": "month",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Respond with the todo count per date in the specified month",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "month": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "count": {
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "date",
                                                    "count"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "month",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No todos found for the specified month",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}